<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Groupe extends \AppBundle\Entity\Groupe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'titre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'nbFiche', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'passwordGroupe', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'nbMembre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'dateCreation', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'membre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'fiche'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'titre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'nbFiche', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'passwordGroupe', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'nbMembre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'dateCreation', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'membre', '' . "\0" . 'AppBundle\\Entity\\Groupe' . "\0" . 'fiche'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Groupe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbFiche($nbFiche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbFiche', [$nbFiche]);

        return parent::setNbFiche($nbFiche);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbFiche()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbFiche', []);

        return parent::getNbFiche();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordGroupe($passwordGroupe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordGroupe', [$passwordGroupe]);

        return parent::setPasswordGroupe($passwordGroupe);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordGroupe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordGroupe', []);

        return parent::getPasswordGroupe();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbMembre($nbMembre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbMembre', [$nbMembre]);

        return parent::setNbMembre($nbMembre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbMembre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbMembre', []);

        return parent::getNbMembre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation($dateCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addMembre(\AppBundle\Entity\Membre $membre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMembre', [$membre]);

        return parent::addMembre($membre);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMembre(\AppBundle\Entity\Membre $membre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMembre', [$membre]);

        return parent::removeMembre($membre);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembre', []);

        return parent::getMembre();
    }

    /**
     * {@inheritDoc}
     */
    public function getFiche()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiche', []);

        return parent::getFiche();
    }

    /**
     * {@inheritDoc}
     */
    public function addFiche(\AppBundle\Entity\Fiche $fiche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFiche', [$fiche]);

        return parent::addFiche($fiche);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFiche(\AppBundle\Entity\Fiche $fiche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFiche', [$fiche]);

        return parent::removeFiche($fiche);
    }

}
